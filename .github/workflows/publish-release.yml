name: Publish release

on:
  release:
    types: created      
  
jobs:
  publish-clinicarrivals:
    runs-on: windows-latest
    env:
      buildtype: Release
      TAG_NAME: ${{github.event.release.tag_name}}
     
    steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.4.0
    
    - name: Setup nuget.exe
      uses: warrenbuckley/Setup-Nuget@v1
    
    - name: Setup msbuild.exe
      uses: microsoft/setup-msbuild@v1

    - name: Checkout source code
      uses: actions/checkout@v2.0.0
  
    - name: Restore packages
      run: nuget restore
    
    - name: Update version number in assemblies
      shell: powershell
      run: |
        # Ideally this uses Resolve-Path -Path "*\*\AssemblyInfo.cs" | Get-Content
        $regex = 'Assembly(File)?Version\(".+?"\)'
        $replacement = "Assembly`$1Version(`"$env:TAG_NAME`"))"

        $assemblyinfo = "ClinicArrivals\Properties\AssemblyInfo.cs"
        (Get-Content $assemblyinfo -Raw) -replace $regex, $replacement | Set-Content $assemblyinfo
        
        $assemblyinfo = "ClinicArrivals.Server\Properties\AssemblyInfo.cs"
        (Get-Content $assemblyinfo -Raw) -replace $regex, $replacement | Set-Content $assemblyinfo
        
        $assemblyinfo = "Test.Models\Properties\AssemblyInfo.cs"
        (Get-Content $assemblyinfo -Raw) -replace $regex, $replacement | Set-Content $assemblyinfo
            
    - name: Compile ClinicArrivals
      run: msbuild /p:Configuration=${{env.buildtype}} -maxcpucount:2 ClinicArrivals.sln
    
    - name: Build installer
      shell: powershell
      env:
        WORKSPACE: ${{runner.workspace}}
      run: |
        $SQUIRRELWIN = "$env:WORKSPACE\squirrel-packaging-prep"
        $SQUIRRELWINBIN = "$SQUIRRELWIN\lib\net45\"
        $RELEASEDIR = "$env:WORKSPACE\finished-installer"
        if (-not $(Test-Path "$SQUIRRELWINBIN")) {
          New-Item "$SQUIRRELWINBIN" -ItemType "directory"
        }
        
        Move-Item $env:WORKSPACE\ClinicArrivals\ClinicArrivals\bin\$env:buildtype\* $SQUIRRELWINBIN
        Remove-Item $env:WORKSPACE\ClinicArrivals\ClinicArrivals\bin\$env:buildtype\* -include *.pdb, *.vshost.*
        Move-Item $env:WORKSPACE\ClinicArrivals\ClinicArrivals.png $SQUIRRELWIN
        
        $Script:NuSpec = "$env:WORKSPACE\ClinicArrivals\ClinicArrivals.nuspec"
                
        nuget pack "$Script:NuSpec" -Version "$env:TAG_NAME" -BasePath $SQUIRRELWIN -OutputDirectory $SQUIRRELWIN

        $Script:NupkgPath = "$SQUIRRELWIN\ClinicArrivals.$env:TAG_NAME.nupkg"
        
        if (-not (Test-Path -Path $Script:NupkgPath -PathType Leaf)) {
          Write-Output "ERROR: nupkg doesn't exist as expected! Build aborted."
          exit 1
        }  
               
        nuget install squirrel.windows -ExcludeVersion
       
        .\squirrel.windows\tools\Squirrel --releasify $Script:NupkgPath --releaseDir $RELEASEDIR --no-msi --setupIcon $env:workspace\ClinicArrivals\ClinicArrivals\ClinicArrivals.ico        
        
        if (-not (Test-Path -Path "$RELEASEDIR\Setup.exe" -PathType Leaf)) {
          Write-Output "=== ERROR: Squirrel failed to generate the installer! Build aborted. Squirrel log is:"
          Get-Content -Path .\squirrel.windows\tools\SquirrelSetup.log
          exit 1
        }
        
        echo "::set-env name=RELEASEDIR::$RELEASEDIR"
    
    - name: Upload installer to release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: ClinicArrivals-${{github.event.release.tag_name}}-win.exe
        asset_path: ${{env.RELEASEDIR}}\Setup.exe
        asset_content_type: application/vnd.microsoft.portable-executable
